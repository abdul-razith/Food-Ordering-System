# Generated by Django 5.0.2 on 2024-04-24 17:12

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=30)),
                ('user_id', models.PositiveIntegerField()),
                ('food_id', models.IntegerField()),
                ('food_image', models.ImageField(default='food_pic.png', upload_to='food_images')),
                ('food_name', models.CharField(max_length=30)),
                ('food_price', models.PositiveIntegerField()),
                ('food_discount', models.PositiveIntegerField(default=0)),
                ('food_discount_price', models.PositiveIntegerField(null=True)),
                ('food_price_saved', models.PositiveIntegerField(default=0)),
                ('food_quantity', models.IntegerField(default=1)),
                ('total', models.IntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='CheckOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('user_name', models.CharField(max_length=30)),
                ('cart_items', models.JSONField()),
                ('sub_total', models.IntegerField()),
                ('shipping_price', models.IntegerField()),
                ('final_price', models.IntegerField()),
                ('order_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=60)),
                ('item_desc', models.CharField(max_length=100)),
                ('item_price', models.IntegerField()),
                ('item_image', models.ImageField(default='food_pic.png', upload_to='food_images')),
                ('item_category', models.CharField(choices=[('veg', 'Veg'), ('_line_veg', '--------------------------------'), ('pizza', 'Pizza'), ('fullmeals_veg', 'Full Meals'), ('burgers', 'Burgers'), ('pasta', 'Pasta'), ('salads', 'Salads'), ('wraps', 'Wraps'), ('_line_nonveg', '--------------------------------'), ('nonveg', 'Non - Veg'), ('_line_nonvegs', '--------------------------------'), ('fry', 'Fry'), ('fullmeals_nonveg', 'Full Meals'), ('bbq', 'BBQ Items'), ('grilled', 'Grilled Meats'), ('curries', 'Curries'), ('soups', 'Soups'), ('chicken', 'Chicken Specialties'), ('_line_seafood', '--------------------------------'), ('seafood', 'Sea Food'), ('_line_seafoods', '--------------------------------'), ('fry_seafood', 'Fry Varieties'), ('curry_seafood', 'Curry Specialties'), ('grilled_seafood', 'Grilled Delights'), ('stew_and_soups_seafood', 'Stew and Soups')], default=None, max_length=50)),
                ('sub_category', models.CharField(choices=[('veg', 'Veg'), ('non-veg', 'Non - Veg'), ('seafood', 'Sea Food')], default=None, max_length=10)),
                ('is_trending', models.BooleanField(default=False)),
                ('discount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='The value must be greater than or equal to 0.'), django.core.validators.MaxValueValidator(limit_value=100, message='The value must be less than or equal to 100')])),
            ],
        ),
    ]
